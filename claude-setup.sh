#!/bin/bash

echo "ü§ñ –ü–†–Ø–ú–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê CLAUDE CODE"
echo "==============================="

# –í—ã–ø–æ–ª–Ω—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –Ω–∞–ø—Ä—è–º—É—é –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ –±–µ–∑ -it
docker exec whonix-workstation bash -c '
# –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è user
su - user << "USER_INSTALL"

echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Claude Code –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è user..."

# 1. –û—á–∏—â–∞–µ–º proxy –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
unset http_proxy https_proxy HTTP_PROXY HTTPS_PROXY ALL_PROXY all_proxy

# 2. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º npm
npm config delete proxy 2>/dev/null || true
npm config delete https-proxy 2>/dev/null || true
npm config set registry https://registry.npmjs.org/

# 3. –í—Ä–µ–º–µ–Ω–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º proxy –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
npm config set proxy socks5://10.152.152.10:9050
npm config set https-proxy socks5://10.152.152.10:9050

# 4. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é
npm uninstall -g @anthropic-ai/claude-code 2>/dev/null || true

# 5. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Claude Code
echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Claude Code..."
npm install -g @anthropic-ai/claude-code

# 6. –û—á–∏—â–∞–µ–º npm proxy
npm config delete proxy
npm config delete https-proxy

# 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
if command -v claude >/dev/null 2>&1; then
    echo "‚úÖ Claude Code —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤: $(which claude)"
    
    # –ü—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ—Ä—Å–∏—é –±–µ–∑ proxy
    unset http_proxy https_proxy HTTP_PROXY HTTPS_PROXY ALL_PROXY all_proxy
    
    echo "–¢–µ—Å—Ç–∏—Ä—É–µ–º Claude –±–µ–∑ proxy –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö..."
    claude --version 2>&1 || echo "–û—à–∏–±–∫–∞ –≤–µ—Ä—Å–∏–∏"
    
else
    echo "‚ùå Claude Code –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# 8. –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π wrapper
mkdir -p ~/bin

cat > ~/bin/claude-clean << "WRAPPER"
#!/bin/bash

# –ü—Ä–æ—Å—Ç–æ–π wrapper –¥–ª—è Claude –±–µ–∑ proxy –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
echo "ü§ñ –ó–∞–ø—É—Å–∫ Claude (–±–µ–∑ proxy)..."

# –û—á–∏—â–∞–µ–º –í–°–ï proxy –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
unset http_proxy https_proxy HTTP_PROXY HTTPS_PROXY ALL_PROXY all_proxy
unset npm_config_proxy npm_config_https_proxy

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç–∏:"
TOR_IP=$(curl -s --socks5 10.152.152.10:9050 --max-time 5 https://api.ipify.org 2>/dev/null || echo "–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ")
echo "   Tor IP: $TOR_IP"

LEAK_TEST=$(timeout 2 curl -s --max-time 1 http://1.1.1.1 >/dev/null 2>&1 && echo "‚ùå –ï–°–¢–¨ –£–¢–ï–ß–ö–ò!" || echo "‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ")
echo "   –£—Ç–µ—á–∫–∏: $LEAK_TEST"
echo ""

# –ó–∞–ø—É—Å–∫–∞–µ–º Claude
exec claude "$@"
WRAPPER

chmod +x ~/bin/claude-clean

# 9. –°–æ–∑–¥–∞–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π API wrapper
cat > ~/bin/claude-api << "API_WRAPPER"
#!/bin/bash

# API wrapper –¥–ª—è –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ Claude —á–µ—Ä–µ–∑ Tor

if [ -z "$ANTHROPIC_API_KEY" ]; then
    echo "‚ùå –ù—É–∂–µ–Ω API –∫–ª—é—á:"
    echo "export ANTHROPIC_API_KEY=\"your-key-here\""
    exit 1
fi

PROMPT="$*"
if [ -z "$PROMPT" ]; then
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: claude-api \"–≤–∞—à –≤–æ–ø—Ä–æ—Å\""
    exit 1
fi

echo "üîí –ó–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ Tor –∫ Claude API..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Tor
TOR_IP=$(curl -s --socks5 10.152.152.10:9050 --max-time 5 https://api.ipify.org 2>/dev/null)
if [ -z "$TOR_IP" ]; then
    echo "‚ùå Tor –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!"
    exit 1
fi

echo "‚úÖ Tor –∞–∫—Ç–∏–≤–µ–Ω: $TOR_IP"

# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
RESPONSE=$(curl -s --socks5 10.152.152.10:9050 \
  --max-time 30 \
  -H "Content-Type: application/json" \
  -H "x-api-key: $ANTHROPIC_API_KEY" \
  -H "anthropic-version: 2023-06-01" \
  -d "{
    \"model\": \"claude-3-sonnet-20240229\",
    \"max_tokens\": 1000,
    \"messages\": [{
      \"role\": \"user\", 
      \"content\": \"$PROMPT\"
    }]
  }" \
  https://api.anthropic.com/v1/messages 2>/dev/null)

if [ $? -eq 0 ] && [ -n "$RESPONSE" ]; then
    echo ""
    echo "üìù –û—Ç–≤–µ—Ç Claude:"
    echo "$RESPONSE" | jq -r ".content[0].text" 2>/dev/null || echo "$RESPONSE"
else
    echo "‚ùå –û—à–∏–±–∫–∞ API –∑–∞–ø—Ä–æ—Å–∞"
fi
API_WRAPPER

chmod +x ~/bin/claude-api

# 10. –û–±–Ω–æ–≤–ª—è–µ–º PATH
if ! echo "$PATH" | grep -q "$HOME/bin"; then
    echo "export PATH=\"\$HOME/bin:\$PATH\"" >> ~/.bashrc
fi

# 11. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω—É–∂–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."

# jq –¥–ª—è JSON
if ! command -v jq >/dev/null 2>&1; then
    echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ jq..."
    sudo apt-get update >/dev/null 2>&1
    sudo apt-get install -y jq >/dev/null 2>&1
fi

echo ""
echo "üéâ –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
echo ""
echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "1. claude-clean \"–≤–æ–ø—Ä–æ—Å\"  - Claude –±–µ–∑ proxy"
echo "2. claude-api \"–≤–æ–ø—Ä–æ—Å\"    - –ü—Ä—è–º–æ–π API —á–µ—Ä–µ–∑ Tor"
echo "3. claude \"–≤–æ–ø—Ä–æ—Å\"        - –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π Claude"
echo ""

USER_INSTALL
'

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏
echo ""
echo "üß™ –ü–†–û–í–ï–†–ö–ê –£–°–¢–ê–ù–û–í–ö–ò:"
echo "====================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Claude —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
CLAUDE_PATH=$(docker exec whonix-workstation su - user -c "which claude" 2>/dev/null)
if [ -n "$CLAUDE_PATH" ]; then
    echo "‚úÖ Claude –Ω–∞–π–¥–µ–Ω: $CLAUDE_PATH"
    
    # –ü—Ä–æ–±—É–µ–º –≤–µ—Ä—Å–∏—é
    CLAUDE_VERSION=$(docker exec whonix-workstation su - user -c "unset http_proxy https_proxy; claude --version" 2>/dev/null)
    if [ $? -eq 0 ]; then
        echo "‚úÖ Claude –≤–µ—Ä—Å–∏—è: $CLAUDE_VERSION"
    else
        echo "‚ö†Ô∏è  Claude —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–ø—É—Å–∫–æ–º"
    fi
else
    echo "‚ùå Claude –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º wrappers
WRAPPERS=$(docker exec whonix-workstation su - user -c "ls -la ~/bin/claude-*" 2>/dev/null)
if [ -n "$WRAPPERS" ]; then
    echo "‚úÖ –°–æ–∑–¥–∞–Ω—ã wrapper scripts:"
    echo "$WRAPPERS"
else
    echo "‚ö†Ô∏è  Wrapper scripts –Ω–µ —Å–æ–∑–¥–∞–Ω—ã"
fi

echo ""
echo "üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï:"
echo "==============="
echo ""
echo "–ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É:"
echo "docker exec -it whonix-workstation su - user"
echo ""
echo "–ó–∞—Ç–µ–º –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:"
echo "claude-clean --version"
echo "claude-clean \"–ü—Ä–∏–≤–µ—Ç! –ü–æ–∫–∞–∂–∏ –º–æ–π IP –∞–¥—Ä–µ—Å\""
echo ""
echo "–ò–ª–∏ —Å API –∫–ª—é—á–æ–º:"
echo "export ANTHROPIC_API_KEY=\"your-key-here\""
echo "claude-api \"–ü—Ä–∏–≤–µ—Ç Claude! –ì–¥–µ —è –Ω–∞—Ö–æ–∂—É—Å—å?\""